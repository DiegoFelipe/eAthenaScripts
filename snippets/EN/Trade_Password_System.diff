Index: conf/msg_athena.conf
===================================================================
--- conf/msg_athena.conf	(revision 13954)
+++ conf/msg_athena.conf	(working copy)
@@ -543,5 +543,8 @@
 //...
 650: Unknown Job
 
+// Trade System
+700: The players is entering on trade system, wait a moment please.
+
 //Custom translations
 import: conf/import/msg_conf.txt
Index: src/map/trade.c
===================================================================
--- src/map/trade.c	(revision 13954)
+++ src/map/trade.c	(working copy)
@@ -3,6 +3,7 @@
 
 #include "../common/nullpo.h"
 #include "../common/socket.h"
+#include "../common/showmsg.h"
 #include "clif.h"
 #include "itemdb.h"
 #include "map.h"
@@ -29,7 +30,8 @@
  *------------------------------------------*/
 void trade_traderequest(struct map_session_data *sd, struct map_session_data *target_sd)
 {
-	int level;
+	struct npc_data *nd;
+	int level, PassWord, Continue, PassWord_target, Continue_target;
 
 	nullpo_retv(sd);
 
@@ -76,6 +78,30 @@
 		clif_tradestart(sd, 0); // too far
 		return ;
 	}
+
+	PassWord =  pc_readaccountreg2(sd,"##TradePassWord");
+	Continue = pc_readglobalreg(sd,"Trade_Continue");
+	PassWord_target = pc_readaccountreg2(target_sd,"##TradePassWord");
+	Continue_target = pc_readglobalreg(target_sd,"Trade_Continue");
+
+	nd = npc_name2id("TradePassword");
+
+	if( nd == NULL )
+		ShowWarning("Script_Trade: nao encontrado! Ignorando o Sistema de Senha de Trade!");
+
+	if( nd != NULL && !PassWord && !Continue )
+	{
+		run_script(nd->u.scr.script, 0, sd->bl.id, nd->bl.id);
+		clif_displaymessage(target_sd->fd, msg_txt(700));
+		return;
+	}
+
+	if( nd != NULL && !PassWord_target && !Continue_target )
+	{
+		run_script(nd->u.scr.script, 0, target_sd->bl.id, nd->bl.id);
+		clif_displaymessage(sd->fd, msg_txt(700));
+		return;
+	}
 	
 	target_sd->trade_partner = sd->status.account_id;
 	sd->trade_partner = target_sd->status.account_id;
@@ -95,21 +121,28 @@
  *------------------------------------------*/
 void trade_tradeack(struct map_session_data *sd, int type)
 {
+	struct npc_data *nd;
 	struct map_session_data *tsd;
+	int PassWord, Continue, PassWord_target, Continue_target;
 	nullpo_retv(sd);
 
 	if (sd->state.trading || !sd->trade_partner)
+	{
+		pc_setglobalreg(sd,"Trade_Continue",0);
 		return; //Already trading or no partner set.
+	}
 	
 	if ((tsd = map_id2sd(sd->trade_partner)) == NULL) {
 		clif_tradestart(sd, 1); // character does not exist
 		sd->trade_partner=0;
+		pc_setglobalreg(sd,"Trade_Continue",0);
 		return;
 	}
 
 	if (tsd->state.trading || tsd->trade_partner != sd->bl.id)
 	{
 		clif_tradestart(sd, 2);
+		pc_setglobalreg(sd,"Trade_Continue",0);
 		return; //Already trading or wrong partner.
 	}
 
@@ -120,11 +153,15 @@
 		sd->trade_partner = 0;
 		tsd->state.deal_locked = 0;
 		tsd->trade_partner = 0;
+		pc_setglobalreg(sd,"Trade_Continue",0);
 		return;
 	}
 
 	if (type != 3)
+	{
+		pc_setglobalreg(sd,"Trade_Continue",0);
 		return; //If client didn't send accept, it's a broken packet?
+	}
 
 	//Copied here as well since the original character could had warped.
 	if (pc_isGM(tsd) < battle_config.lowest_gm_level && (sd->bl.m != tsd->bl.m ||
@@ -133,6 +170,7 @@
 		clif_tradestart(sd, 0); // too far
 		sd->trade_partner=0;
 		tsd->trade_partner = 0;
+		pc_setglobalreg(sd,"Trade_Continue",0);
 		return;
 	}
 
@@ -146,9 +184,34 @@
 		sd->trade_partner = 0;
 		tsd->state.deal_locked = 0;
 		tsd->trade_partner = 0;
+		pc_setglobalreg(sd,"Trade_Continue",0);
 		return;
 	}
 
+	PassWord =  pc_readaccountreg2(sd,"##TradePassWord");
+	Continue = pc_readglobalreg(sd,"Trade_Continue");
+	PassWord_target =  pc_readaccountreg2(tsd,"##TradePassWord");
+	Continue_target = pc_readglobalreg(tsd,"Trade_Continue");
+	
+	nd = npc_name2id("TradePassword");
+
+	if( nd == NULL )
+		ShowWarning("Script_Trade: nao encontrado! Ignorando o Sistema de Senha de Trade!");
+
+	if( nd != NULL && !PassWord && !Continue )
+	{
+		run_script(nd->u.scr.script, 0, sd->bl.id, nd->bl.id);
+		clif_displaymessage(tsd->fd, msg_txt(700));
+		return;
+	}
+
+	if( nd != NULL && !PassWord_target && !Continue_target )
+	{
+		run_script(nd->u.scr.script, 0, tsd->bl.id, nd->bl.id);
+		clif_displaymessage(sd->fd, msg_txt(700));
+		return;
+	}
+
 	//Initiate trade
 	sd->state.trading = 1;
 	tsd->state.trading = 1;
@@ -174,6 +237,7 @@
 	if(sd->deal.zeny > sd->status.zeny)
 	{
 		pc_setglobalreg(sd,"ZENY_HACKER",1);
+		pc_setglobalreg(sd,"Trade_Continue",0);
 		return -1;
 	}
 
@@ -321,17 +385,22 @@
 
 	nullpo_retv(sd);
 	if( !sd->state.trading || sd->state.deal_locked > 0 )
+	{
+		pc_setglobalreg(sd,"Trade_Continue",0);
 		return; //Can't add stuff.
+	}
 
 	if( (target_sd = map_id2sd(sd->trade_partner)) == NULL )
 	{
 		trade_tradecancel(sd);
+		pc_setglobalreg(sd,"Trade_Continue",0);
 		return;
 	}
 
 	if( amount == 0 )
 	{	//Why do this.. ~.~ just send an ack, the item won't display on the trade window.
 		clif_tradeitemok(sd, index, 0);
+		pc_setglobalreg(sd,"Trade_Continue",0);
 		return;
 	}
 
@@ -339,9 +408,16 @@
 
 	//Item checks...
 	if( index < 0 || index >= MAX_INVENTORY )
+	{
+		pc_setglobalreg(sd,"Trade_Continue",0);
 		return;
+	}
+
 	if( amount < 0 || amount > sd->status.inventory[index].amount )
+	{
+		pc_setglobalreg(sd,"Trade_Continue",0);
 		return;
+	}
 
 	item = &sd->status.inventory[index];
 	src_lv = pc_isGM(sd);
@@ -351,6 +427,7 @@
 	{
 		clif_displaymessage (sd->fd, msg_txt(260));
 		clif_tradeitemok(sd, index+2, 1);
+		pc_setglobalreg(sd,"Trade_Continue",0);
 		return;
 	}
 
@@ -358,6 +435,7 @@
 	{ // Rental System
 		clif_displaymessage (sd->fd, msg_txt(260));
 		clif_tradeitemok(sd, index+2, 1);
+		pc_setglobalreg(sd,"Trade_Continue",0);
 		return;
 	}
 
@@ -366,6 +444,7 @@
 	if( trade_i == 10 ) //No space left
 	{
 		clif_tradeitemok(sd, index+2, 1);
+		pc_setglobalreg(sd,"Trade_Continue",0);
 		return;
 	}
 
@@ -373,6 +452,7 @@
 	if( target_sd->weight + sd->deal.weight + trade_weight > target_sd->max_weight )
 	{	//fail to add item -- the player was over weighted.
 		clif_tradeitemok(sd, index+2, 1);
+		pc_setglobalreg(sd,"Trade_Continue",0);
 		return;
 	}
 
@@ -405,11 +485,15 @@
 	nullpo_retv(sd);
 
 	if( !sd->state.trading || sd->state.deal_locked > 0 )
+	{
+		pc_setglobalreg(sd,"Trade_Continue",0);
 		return; //Can't add stuff.
+	}
 
 	if( (target_sd = map_id2sd(sd->trade_partner)) == NULL )
 	{
 		trade_tradecancel(sd);
+		pc_setglobalreg(sd,"Trade_Continue",0);
 		return;
 	}
 
@@ -431,9 +515,13 @@
 	struct map_session_data *target_sd;
 
 	if(sd->state.deal_locked || !sd->state.trading)
+	{
+		pc_setglobalreg(sd,"Trade_Continue",0);
 		return;
+	}
 	
 	if ((target_sd = map_id2sd(sd->trade_partner)) == NULL) {
+		pc_setglobalreg(sd,"Trade_Continue",0);
 		trade_tradecancel(sd);
 		return;
 	}
@@ -457,6 +545,7 @@
 	{ // Not trade acepted
 		if( target_sd ) target_sd->trade_partner = 0;
 		sd->trade_partner = 0;
+		pc_setglobalreg(sd,"Trade_Continue",0);
 		return;
 	}
 	
@@ -478,7 +567,10 @@
 	clif_tradecancelled(sd);
 
 	if (!target_sd)
+	{
+		pc_setglobalreg(sd,"Trade_Continue",0);
 		return;
+	}
 
 	for(trade_i = 0; trade_i < 10; trade_i++) { // give items back (only virtual)
 		if (!target_sd->deal.item[trade_i].amount)
@@ -507,33 +599,42 @@
 	int trade_i;
 	int flag;
 
-	if (!sd->state.trading || !sd->state.deal_locked) //Locked should be 1 (pressed ok) before you can press trade.
+	if (!sd->state.trading || !sd->state.deal_locked) { //Locked should be 1 (pressed ok) before you can press trade.
+		pc_setglobalreg(sd,"Trade_Continue",0);
 		return;
+	}
 
 	if ((tsd = map_id2sd(sd->trade_partner)) == NULL) {
 		trade_tradecancel(sd);
+		pc_setglobalreg(sd,"Trade_Continue",0);
 		return;
 	}
 	
 	sd->state.deal_locked = 2;
 	
 	if (tsd->state.deal_locked < 2)
+	{
+		pc_setglobalreg(sd,"Trade_Continue",0);
 		return; //Not yet time for trading.
+	}
 
 	//Now is a good time (to save on resources) to check that the trade can indeed be made and it's not exploitable.
 	// check exploit (trade more items that you have)
 	if (impossible_trade_check(sd)) {
 		trade_tradecancel(sd);
+		pc_setglobalreg(sd,"Trade_Continue",0);
 		return;
 	}
 	// check exploit (trade more items that you have)
 	if (impossible_trade_check(tsd)) {
 		trade_tradecancel(tsd);
+		pc_setglobalreg(sd,"Trade_Continue",0);
 		return;
 	}
 	// check for full inventory (can not add traded items)
 	if (!trade_check(sd,tsd)) { // check the both players
 		trade_tradecancel(sd);
+		pc_setglobalreg(sd,"Trade_Continue",0);
 		return;
 	}
 	
@@ -598,6 +699,8 @@
 		clif_updatestatus(sd, SP_ZENY);
 		clif_updatestatus(tsd, SP_ZENY);
 	}
+
+	pc_setglobalreg(sd,"Trade_Continue",0);
 	
 	sd->state.deal_locked = 0;
 	sd->trade_partner = 0;
